using CairoMakie

function interpolate(m,s,x)
    n=length(m)
    d = m[11] - m[10]
    sum = 0.0
    for i in 1:n
        sum += s[i] * sinc((x - m[i]) / d)
    end
    return sum
end

function sincc(x)
    if x==0
        return 1
    else 
        y=sin(pi*x)/(pi*x)
        return y
    end
end

function rozwiazanie(;
    m::Vector{Float64} = [5.0, 5.0077, 5.0154, 5.0231, 5.0308, 5.0385, 5.0462, 5.0539, 5.0616, 5.0693, 5.077, 5.0847, 5.0924, 5.1001, 5.1078, 5.1155, 5.1232, 5.1309, 5.1386, 5.1463, 5.154, 5.1617, 5.1694, 5.1771, 5.1848, 5.1925, 5.2002, 5.2079, 5.2156, 5.2233, 5.231, 5.2387, 5.2464, 5.2541, 5.2618, 5.2695, 5.2772, 5.2849, 5.2926, 5.3003, 5.308, 5.3157, 5.3234, 5.3311, 5.3388, 5.3465, 5.3542, 5.3619, 5.3696, 5.3773, 5.385, 5.3927, 5.4004, 5.4081, 5.4158, 5.4235, 5.4312, 5.4389, 5.4466, 5.4543, 5.462, 5.4697, 5.4774, 5.4851, 5.4928, 5.5005, 5.5082, 5.5159, 5.5236, 5.5313, 5.539, 5.5467, 5.5544, 5.5621, 5.5698, 5.5775, 5.5852, 5.5929, 5.6006, 5.6083, 5.616, 5.6237, 5.6314, 5.6391, 5.6468, 5.6545, 5.6622, 5.6699],
    s::Vector{Float64} = [0.6988, 0.2507, 0.66, 0.6529, 0.4168, 0.4333, 0.2582, 0.5942, 0.0118, 0.0878, 0.3474, 0.93, 0.6718, 0.2909, 0.3755, 0.2404, 0.919, 0.8712, 0.0213, 0.1219, 0.5281, 0.1741, 0.8811, 0.4154, 0.993, 0.9284, 0.3179, 0.665, 0.4257, 0.0669, 0.6529, 0.7071, 0.0139, 0.9095, 0.6899, 0.2473, 0.3262, 0.0106, 0.4974, 0.077, 0.4539, 0.653, 0.4846, 0.3741, 0.5888, 0.11, 0.4507, 0.7691, 0.927, 0.6793, 0.5696, 0.1225, 0.8793, 0.3383, 0.6678, 0.9058, 0.7767, 0.5775, 0.8338, 0.4302, 0.705, 0.5134, 0.5481, 0.5734, 0.6152, 0.175, 0.6017, 0.8522, 0.4688, 0.3992, 0.4374, 0.1139, 0.7582, 0.5091, 0.9323, 0.3491, 0.0927, 0.7001, 0.5967, 0.5515, 0.1345, 0.7777, 0.6714, 0.5542, 0.1782, 0.5056, 0.6991, 0.5504],
    t::Vector{Float64} = [5.10472, 5.12012, 5.22099, 5.48664, 5.29568, 5.4774, 5.51282, 5.64218, 5.41272, 5.24871, 5.60522, 5.6468, 5.04928],
)
    #2.3381323829817187
    interpolated_signal = [interpolate(m, s, ti) for ti in t]
    sumary=sum(interpolated_signal)
    return sumary

    #fig = Figure(size=(500, 500))
    #ax1 = Axis(fig[1,1], aspect=1)
    #lines!(ax1, m,s,color="red")
    #scatter!(ax1,t, interpolated_signal, color="blue")
    #current_figure()
end

rozwiazanie()




